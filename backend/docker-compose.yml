version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: sloth_postgres
    environment:
      POSTGRES_DB: sloth
      POSTGRES_USER: sloth
      POSTGRES_PASSWORD: sloth_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sloth"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: sloth_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: .
    container_name: sloth_backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://sloth:sloth_password@postgres:5432/sloth
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: .
    container_name: sloth_celery
    command: celery -A config worker --loglevel=info --concurrency=4
    volumes:
      - .:/app
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://sloth:sloth_password@postgres:5432/sloth
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-beat:
    build: .
    container_name: sloth_celery_beat
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://sloth:sloth_password@postgres:5432/sloth
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  flower:
    build: .
    container_name: sloth_flower
    command: celery -A config flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://sloth:sloth_password@postgres:5432/sloth
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - celery
      - redis

  minio:
    image: minio/minio:latest
    container_name: sloth_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:
  static_volume:
  media_volume:
